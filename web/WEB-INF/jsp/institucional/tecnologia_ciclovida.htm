
     <LINK rel="stylesheet" type="text/css" href="css/default.css"/>
     <LINK rel="stylesheet" type="text/css" href="css/jt_DialogBox.css"/>
     <script type="text/javascript" src="js/jt_DialogBox.js"></script>
   	 <script type="text/javascript" src="js/MyApp_dialogs.js"></script>

   	 <script type="text/javascript" src="js/leilao.js"></script>   
     <script type="text/javascript" src="js/wz_tooltip.js"></script>


<div style="padding-left: 10px; padding-right: 10px; padding-top: 20px;">

<p >Durante o
processo de desenvolvimento de um software por demanda, h&aacute; v&aacute;rios
participantes respons&aacute;veis por diferentes etapas do processo. O processo
utilizado pela Adapit &eacute; uma singela adapta&ccedil;&atilde;o do processo <i>Scrum</i>, que caracteriza-se
 pelo desenvolvimento &aacute;gil de aplica&ccedil;&otilde;es. No processo
 foi inclu&iacute;do o uso da ferramenta WCT, que permite utilizar a MDA de forma &aacute;gil. Assim, 
 utilizamos a <i>Unified Modeling Language (UML)</i> para especificar um diagrama de 
 classes de an&aacute;lise/dom&iacute;nio, e utilizamos a WCT numa abordagem de Domain Driven Design
 para gerar partes funcionais importantes de uma aplica&ccedil;&atilde;o como: CRUDs, associa&ccedil;&otilde;es, pesquisas e filtros.
 O que n&atilde;o pode ser definido rapidamente na WCT, preferimos fazer via programa&ccedil;&atilde;o. Nossos
 programadores s&atilde;o focados no desenvolvimento das tarefas mais cr&iacute;ticas da aplica&ccedil;&atilde;o,
 enquanto que as partes geradas s&atilde;o focadas apenas em fluxos, consultas e cadastros.
 Isso possibilita reduzir custos de produ&ccedil;&atilde;o.</p>

<p >Todo o projeto
da empresa inicia com o analista de neg&oacute;cios. Este avalia o neg&oacute;cio do cliente,
especifica o processo do neg&oacute;cio utilizando BPMN. Em caso de acerto do sistema para com o cliente, a Adapit
ir&aacute; iniciar o processo de desenvolvimento, podendo realizar apenas algumas etapas do processo
ou o desenvolvimento completo do aplicativo. </p>

<p >O arquiteto/l&iacute;der t&eacute;cnico utiliza a WCT para configurar o ambiente no qual o sistema do
cliente ser&aacute; desenvolvido. Esta configura&ccedil;&atilde;o ocorre dentro do WCT e dita quais
as tecnologias ser&atilde;o utilizadas para transformar um modelo de entrada em c&oacute;digo
fonte da aplica&ccedil;&atilde;o. Assim, o arquiteto/l&iacute;der t&eacute;cnico define uma configura&ccedil;&atilde;o que ir&aacute; automatizar a
produ&ccedil;&atilde;o de parte do sistema do cliente. Isto &eacute; conhecido como Model Driven Engineering
(MDE) que faz uma mescla com arquiteturas para linhas de produto (Product Line Architectures PLA).</p>

<p >O analista de sistemas ir&aacute; utilizar o WCT para automatizar parte do seu trabalho. Ele utiliza
o Desenvolvimento Dirigido por Modelos (num padr&atilde;o MDA) para transformar os
requisitos do cliente em artefatos de software interpret&aacute;veis pelo WCT. Al&eacute;m
disso, o analista utiliza o WCT para gerar modelos de software automaticamente.</p>

<p >A cada duas semanas
uma vers&atilde;o do sistema &eacute; apresentada para o cliente. Cada vers&atilde;o &eacute; desenvolvida por
programadores de sistemas qualificados. Tais programadores desenvolvem os recursos
que n&atilde;o foram poss&iacute;veis de ser gerados automaticamente pela WCT nas etapas de 
an&aacute;lise e projeto (entrevista com o cliente). Cada vers&atilde;o &eacute; testada internamente
e em conjunto com o cliente dos sistemas.</p>

<p>Para as funcionalidades complexas, programadas exclusivamente pelo desenvolvedor, utiliza-se o
 Test Driven Development, garantindo que a funcionalidade desenvolvida n&atilde;o tenha 
 problemas. Elas s&atilde;o validadas pelo cliente, quando o projeto passa para a pr&oacute;xima itera&ccedil;&atilde;o, quando 
 s&atilde;o identificadas e documentadas num Caso de Uso Textual e o processo se repete.</p>
<br>

</div>